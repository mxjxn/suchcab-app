["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@material-ui/core/Tabs/Tabs.js"],"~:js","shadow$provide.module$node_modules$$material_ui$core$Tabs$Tabs=function(global,require,module,exports){var _interopRequireDefault=require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=exports.styles=void 0;var _extends2=_interopRequireDefault(require(\"module$node_modules$$babel$runtime$helpers$extends\")),_objectWithoutProperties2=_interopRequireDefault(require(\"module$node_modules$$babel$runtime$helpers$objectWithoutProperties\")),\n_defineProperty2=_interopRequireDefault(require(\"module$node_modules$$babel$runtime$helpers$defineProperty\")),_react=_interopRequireDefault(require(\"module$node_modules$react$index\"));global=_interopRequireDefault(require(\"module$node_modules$prop_types$index\"));var _clsx=_interopRequireDefault(require(\"module$node_modules$clsx$dist$clsx\"));module=require(\"module$node_modules$$material_ui$utils$index\");var _debounce=_interopRequireDefault(require(\"module$node_modules$$material_ui$core$utils$debounce\")),\n_ownerWindow=_interopRequireDefault(require(\"module$node_modules$$material_ui$core$utils$ownerWindow\")),_normalizeScrollLeft=require(\"module$node_modules$normalize_scroll_left$cjs$main\"),_animate=_interopRequireDefault(require(\"module$node_modules$$material_ui$core$internal$animate\")),_ScrollbarSize=_interopRequireDefault(require(\"module$node_modules$$material_ui$core$Tabs$ScrollbarSize\")),_withStyles=_interopRequireDefault(require(\"module$node_modules$$material_ui$core$styles$withStyles\")),_TabIndicator=\n_interopRequireDefault(require(\"module$node_modules$$material_ui$core$Tabs$TabIndicator\")),_TabScrollButton=_interopRequireDefault(require(\"module$node_modules$$material_ui$core$Tabs$TabScrollButton\")),_useEventCallback=_interopRequireDefault(require(\"module$node_modules$$material_ui$core$utils$useEventCallback\")),_useTheme=_interopRequireDefault(require(\"module$node_modules$$material_ui$core$styles$useTheme\"));require=function(theme){return{root:{overflow:\"hidden\",minHeight:48,WebkitOverflowScrolling:\"touch\",\ndisplay:\"flex\"},vertical:{flexDirection:\"column\"},flexContainer:{display:\"flex\"},flexContainerVertical:{flexDirection:\"column\"},centered:{justifyContent:\"center\"},scroller:{position:\"relative\",display:\"inline-block\",flex:\"1 1 auto\",whiteSpace:\"nowrap\"},fixed:{overflowX:\"hidden\",width:\"100%\"},scrollable:{overflowX:\"scroll\",scrollbarWidth:\"none\",\"\\x26::-webkit-scrollbar\":{display:\"none\"}},scrollButtons:{},scrollButtonsDesktop:(0,_defineProperty2.default)({},theme.breakpoints.down(\"xs\"),{display:\"none\"}),\nindicator:{}}};exports.styles=require;_interopRequireDefault=_react.default.forwardRef(function(props,ref){var action=props.action,_props$centered=props.centered;_props$centered=void 0===_props$centered?!1:_props$centered;var childrenProp=props.children,classes=props.classes,className=props.className,_props$component=props.component;_props$component=void 0===_props$component?\"div\":_props$component;var _props$indicatorColor=props.indicatorColor;_props$indicatorColor=void 0===_props$indicatorColor?\n\"secondary\":_props$indicatorColor;var onChange=props.onChange,_props$orientation=props.orientation,orientation=void 0===_props$orientation?\"horizontal\":_props$orientation;_props$orientation=props.ScrollButtonComponent;var ScrollButtonComponent=void 0===_props$orientation?_TabScrollButton.default:_props$orientation;_props$orientation=props.scrollButtons;var scrollButtons=void 0===_props$orientation?\"auto\":_props$orientation;_props$orientation=props.TabIndicatorProps;_props$orientation=void 0===_props$orientation?\n{}:_props$orientation;var _props$textColor=props.textColor,textColor=void 0===_props$textColor?\"inherit\":_props$textColor,value=props.value;_props$textColor=props.variant;var variant=void 0===_props$textColor?\"standard\":_props$textColor;props=(0,_objectWithoutProperties2.default)(props,\"action centered children classes className component indicatorColor onChange orientation ScrollButtonComponent scrollButtons TabIndicatorProps textColor value variant\".split(\" \"));var theme=(0,_useTheme.default)(),\nscrollable=\"scrollable\"===variant,isRtl=\"rtl\"===theme.direction,vertical=\"vertical\"===orientation,scrollStart=vertical?\"scrollTop\":\"scrollLeft\",start=vertical?\"top\":\"left\",end=vertical?\"bottom\":\"right\",clientSize=vertical?\"clientHeight\":\"clientWidth\",size=vertical?\"height\":\"width\";_props$centered&&scrollable&&console.error('Material-UI: you can not use the `centered\\x3d{true}` and `variant\\x3d\"scrollable\"` properties at the same time on a `Tabs` component.');_props$textColor=_react.default.useState(!1);\nvar mounted=_props$textColor[0],setMounted=_props$textColor[1];_props$textColor=_react.default.useState({});var indicatorStyle=_props$textColor[0],setIndicatorStyle=_props$textColor[1];_props$textColor=_react.default.useState({start:!1,end:!1});var displayScroll=_props$textColor[0],setDisplayScroll=_props$textColor[1],_React$useState4=_react.default.useState({overflow:\"hidden\",marginBottom:null});_props$textColor=_React$useState4[0];var setScrollerStyle=_React$useState4[1],valueToIndex=new Map,tabsRef=\n_react.default.useRef(null),childrenWrapperRef=_react.default.useRef(null),getTabsMeta=function(){var tabsNode=tabsRef.current;if(tabsNode){var tabsMeta=tabsNode.getBoundingClientRect();tabsMeta={clientWidth:tabsNode.clientWidth,scrollLeft:tabsNode.scrollLeft,scrollTop:tabsNode.scrollTop,scrollLeftNormalized:(0,_normalizeScrollLeft.getNormalizedScrollLeft)(tabsNode,theme.direction),scrollWidth:tabsNode.scrollWidth,top:tabsMeta.top,bottom:tabsMeta.bottom,left:tabsMeta.left,right:tabsMeta.right}}var tabMeta;\ntabsNode&&!1!==value&&(tabsNode=childrenWrapperRef.current.children,0<tabsNode.length&&((tabMeta=tabsNode[valueToIndex.get(value)])||console.error([\"Material-UI: the value provided `\".concat(value,\"` to the Tabs component is invalid.\"),\"None of the Tabs children have this value.\",valueToIndex.keys?\"You can provide one of the following values: \".concat(Array.from(valueToIndex.keys()).join(\", \"),\".\"):null].join(\"\\n\")),tabMeta=tabMeta?tabMeta.getBoundingClientRect():null));return{tabsMeta:tabsMeta,tabMeta:tabMeta}},\nupdateIndicatorState=(0,_useEventCallback.default)(function(){var _newIndicatorStyle,_getTabsMeta=getTabsMeta(),tabsMeta=_getTabsMeta.tabsMeta;_getTabsMeta=_getTabsMeta.tabMeta;var startValue=0;_getTabsMeta&&tabsMeta&&(startValue=vertical?_getTabsMeta.top-tabsMeta.top+tabsMeta.scrollTop:_getTabsMeta.left-tabsMeta.left+(isRtl?tabsMeta.scrollLeftNormalized+tabsMeta.clientWidth-tabsMeta.scrollWidth:tabsMeta.scrollLeft));tabsMeta=(_newIndicatorStyle={},(0,_defineProperty2.default)(_newIndicatorStyle,\nstart,startValue),(0,_defineProperty2.default)(_newIndicatorStyle,size,_getTabsMeta?_getTabsMeta[size]:0),_newIndicatorStyle);isNaN(indicatorStyle[start])||isNaN(indicatorStyle[size])?setIndicatorStyle(tabsMeta):(_newIndicatorStyle=Math.abs(indicatorStyle[size]-tabsMeta[size]),(1<=Math.abs(indicatorStyle[start]-tabsMeta[start])||1<=_newIndicatorStyle)&&setIndicatorStyle(tabsMeta))}),scroll=function(scrollValue){(0,_animate.default)(scrollStart,tabsRef.current,scrollValue)},moveTabsScroll=function(delta){var scrollValue=\ntabsRef.current[scrollStart];vertical?scrollValue+=delta:(scrollValue+=delta*(isRtl?-1:1),scrollValue*=isRtl&&\"reverse\"===(0,_normalizeScrollLeft.detectScrollType)()?-1:1);scroll(scrollValue)},handleStartScrollClick=function(){moveTabsScroll(-tabsRef.current[clientSize])},handleEndScrollClick=function(){moveTabsScroll(tabsRef.current[clientSize])},handleScrollbarSizeChange=_react.default.useCallback(function(scrollbarHeight){setScrollerStyle({overflow:null,marginBottom:-scrollbarHeight})},[]),scrollSelectedIntoView=\n(0,_useEventCallback.default)(function(){var _getTabsMeta2=getTabsMeta(),tabsMeta=_getTabsMeta2.tabsMeta;(_getTabsMeta2=_getTabsMeta2.tabMeta)&&tabsMeta&&(_getTabsMeta2[start]<tabsMeta[start]?scroll(tabsMeta[scrollStart]+(_getTabsMeta2[start]-tabsMeta[start])):_getTabsMeta2[end]>tabsMeta[end]&&scroll(tabsMeta[scrollStart]+(_getTabsMeta2[end]-tabsMeta[end])))}),updateScrollButtonState=(0,_useEventCallback.default)(function(){if(scrollable&&\"off\"!==scrollButtons){var _tabsRef$current=tabsRef.current,\nscrollTop=_tabsRef$current.scrollTop,scrollHeight=_tabsRef$current.scrollHeight,clientHeight=_tabsRef$current.clientHeight,scrollWidth=_tabsRef$current.scrollWidth,clientWidth=_tabsRef$current.clientWidth;vertical?(_tabsRef$current=1<scrollTop,scrollWidth=scrollTop<scrollHeight-clientHeight-1):(scrollTop=(0,_normalizeScrollLeft.getNormalizedScrollLeft)(tabsRef.current,theme.direction),_tabsRef$current=isRtl?scrollTop<scrollWidth-clientWidth-1:1<scrollTop,scrollWidth=isRtl?1<scrollTop:scrollTop<scrollWidth-\nclientWidth-1);_tabsRef$current===displayScroll.start&&scrollWidth===displayScroll.end||setDisplayScroll({start:_tabsRef$current,end:scrollWidth})}});_react.default.useEffect(function(){var handleResize=(0,_debounce.default)(function(){updateIndicatorState();updateScrollButtonState()}),win=(0,_ownerWindow.default)(tabsRef.current);win.addEventListener(\"resize\",handleResize);return function(){handleResize.clear();win.removeEventListener(\"resize\",handleResize)}},[updateIndicatorState,updateScrollButtonState]);\nvar handleTabsScroll=_react.default.useCallback((0,_debounce.default)(function(){updateScrollButtonState()}));_react.default.useEffect(function(){return function(){handleTabsScroll.clear()}},[handleTabsScroll]);_react.default.useEffect(function(){setMounted(!0)},[]);_react.default.useEffect(function(){updateIndicatorState();updateScrollButtonState()});_react.default.useEffect(function(){scrollSelectedIntoView()},[scrollSelectedIntoView,indicatorStyle]);_react.default.useImperativeHandle(action,function(){return{updateIndicator:updateIndicatorState,\nupdateScrollButtons:updateScrollButtonState}},[updateIndicatorState,updateScrollButtonState]);var indicator=_react.default.createElement(_TabIndicator.default,(0,_extends2.default)({className:classes.indicator,orientation:orientation,color:_props$indicatorColor},_props$orientation,{style:(0,_extends2.default)({},indicatorStyle,{},_props$orientation.style)})),childIndex=0;action=_react.default.Children.map(childrenProp,function(child){if(!_react.default.isValidElement(child))return null;child.type===\n_react.default.Fragment&&console.error(\"Material-UI: the Tabs component doesn't accept a Fragment as a child.\\nConsider providing an array instead.\");var childValue=void 0===child.props.value?childIndex:child.props.value;valueToIndex.set(childValue,childIndex);var selected=childValue===value;childIndex+=1;return _react.default.cloneElement(child,{fullWidth:\"fullWidth\"===variant,indicator:selected&&!mounted&&indicator,selected:selected,onChange:onChange,textColor:textColor,value:childValue})});childrenProp=\nfunction(){var conditionalElements={};conditionalElements.scrollbarSizeListener=scrollable?_react.default.createElement(_ScrollbarSize.default,{className:classes.scrollable,onChange:handleScrollbarSizeChange}):null;var scrollButtonsActive=displayScroll.start||displayScroll.end;scrollButtonsActive=scrollable&&(\"auto\"===scrollButtons&&scrollButtonsActive||\"desktop\"===scrollButtons||\"on\"===scrollButtons);conditionalElements.scrollButtonStart=scrollButtonsActive?_react.default.createElement(ScrollButtonComponent,\n{orientation:orientation,direction:isRtl?\"right\":\"left\",onClick:handleStartScrollClick,visible:displayScroll.start,className:(0,_clsx.default)(classes.scrollButtons,\"on\"!==scrollButtons&&classes.scrollButtonsDesktop)}):null;conditionalElements.scrollButtonEnd=scrollButtonsActive?_react.default.createElement(ScrollButtonComponent,{orientation:orientation,direction:isRtl?\"left\":\"right\",onClick:handleEndScrollClick,visible:displayScroll.end,className:(0,_clsx.default)(classes.scrollButtons,\"on\"!==scrollButtons&&\nclasses.scrollButtonsDesktop)}):null;return conditionalElements}();return _react.default.createElement(_props$component,(0,_extends2.default)({className:(0,_clsx.default)(classes.root,className,vertical&&classes.vertical),ref:ref},props),childrenProp.scrollButtonStart,childrenProp.scrollbarSizeListener,_react.default.createElement(\"div\",{className:(0,_clsx.default)(classes.scroller,scrollable?classes.scrollable:classes.fixed),style:_props$textColor,ref:tabsRef,onScroll:handleTabsScroll},_react.default.createElement(\"div\",\n{className:(0,_clsx.default)(classes.flexContainer,vertical&&classes.flexContainerVertical,_props$centered&&!scrollable&&classes.centered),ref:childrenWrapperRef,role:\"tablist\"},action),mounted&&indicator),childrenProp.scrollButtonEnd)});_interopRequireDefault.propTypes={action:module.refType,centered:global.default.bool,children:global.default.node,classes:global.default.object.isRequired,className:global.default.string,component:global.default.elementType,indicatorColor:global.default.oneOf([\"secondary\",\n\"primary\"]),onChange:global.default.func,orientation:global.default.oneOf([\"horizontal\",\"vertical\"]),ScrollButtonComponent:global.default.elementType,scrollButtons:global.default.oneOf([\"auto\",\"desktop\",\"on\",\"off\"]),TabIndicatorProps:global.default.object,textColor:global.default.oneOf([\"secondary\",\"primary\",\"inherit\"]),value:global.default.any,variant:global.default.oneOf([\"standard\",\"scrollable\",\"fullWidth\"])};require=(0,_withStyles.default)(require,{name:\"MuiTabs\"})(_interopRequireDefault);exports.default=\nrequire}","~:source","shadow$provide[\"module$node_modules$$material_ui$core$Tabs$Tabs\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _debounce = _interopRequireDefault(require(\"../utils/debounce\"));\n\nvar _ownerWindow = _interopRequireDefault(require(\"../utils/ownerWindow\"));\n\nvar _normalizeScrollLeft = require(\"normalize-scroll-left\");\n\nvar _animate = _interopRequireDefault(require(\"../internal/animate\"));\n\nvar _ScrollbarSize = _interopRequireDefault(require(\"./ScrollbarSize\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _TabIndicator = _interopRequireDefault(require(\"./TabIndicator\"));\n\nvar _TabScrollButton = _interopRequireDefault(require(\"./TabScrollButton\"));\n\nvar _useEventCallback = _interopRequireDefault(require(\"../utils/useEventCallback\"));\n\nvar _useTheme = _interopRequireDefault(require(\"../styles/useTheme\"));\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      minHeight: 48,\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      display: 'flex'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the flex container element. */\n    flexContainer: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the flex container element if `orientation=\"vertical\"`. */\n    flexContainerVertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\n    centered: {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the tablist element. */\n    scroller: {\n      position: 'relative',\n      display: 'inline-block',\n      flex: '1 1 auto',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\n    fixed: {\n      overflowX: 'hidden',\n      width: '100%'\n    },\n\n    /* Styles applied to the tablist element if `variant=\"scrollable\"`. */\n    scrollable: {\n      overflowX: 'scroll',\n      // Hide dimensionless scrollbar on MacOS\n      scrollbarWidth: 'none',\n      // Firefox\n      '&::-webkit-scrollbar': {\n        display: 'none' // Safari + Chrome\n\n      }\n    },\n\n    /* Styles applied to the `ScrollButtonComponent` component. */\n    scrollButtons: {},\n\n    /* Styles applied to the `ScrollButtonComponent` component if `scrollButtons=\"auto\"` or scrollButtons=\"desktop\"`. */\n    scrollButtonsDesktop: (0, _defineProperty2.default)({}, theme.breakpoints.down('xs'), {\n      display: 'none'\n    }),\n\n    /* Styles applied to the `TabIndicator` component. */\n    indicator: {}\n  };\n};\n\nexports.styles = styles;\n\nvar Tabs = _react.default.forwardRef(function Tabs(props, ref) {\n  var action = props.action,\n      _props$centered = props.centered,\n      centered = _props$centered === void 0 ? false : _props$centered,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$indicatorColor = props.indicatorColor,\n      indicatorColor = _props$indicatorColor === void 0 ? 'secondary' : _props$indicatorColor,\n      onChange = props.onChange,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$ScrollButtonCo = props.ScrollButtonComponent,\n      ScrollButtonComponent = _props$ScrollButtonCo === void 0 ? _TabScrollButton.default : _props$ScrollButtonCo,\n      _props$scrollButtons = props.scrollButtons,\n      scrollButtons = _props$scrollButtons === void 0 ? 'auto' : _props$scrollButtons,\n      _props$TabIndicatorPr = props.TabIndicatorProps,\n      TabIndicatorProps = _props$TabIndicatorPr === void 0 ? {} : _props$TabIndicatorPr,\n      _props$textColor = props.textColor,\n      textColor = _props$textColor === void 0 ? 'inherit' : _props$textColor,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = (0, _objectWithoutProperties2.default)(props, [\"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"indicatorColor\", \"onChange\", \"orientation\", \"ScrollButtonComponent\", \"scrollButtons\", \"TabIndicatorProps\", \"textColor\", \"value\", \"variant\"]);\n  var theme = (0, _useTheme.default)();\n  var scrollable = variant === 'scrollable';\n  var isRtl = theme.direction === 'rtl';\n  var vertical = orientation === 'vertical';\n  var scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  var start = vertical ? 'top' : 'left';\n  var end = vertical ? 'bottom' : 'right';\n  var clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  var size = vertical ? 'height' : 'width';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('Material-UI: you can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n\n  var _React$useState = _react.default.useState(false),\n      mounted = _React$useState[0],\n      setMounted = _React$useState[1];\n\n  var _React$useState2 = _react.default.useState({}),\n      indicatorStyle = _React$useState2[0],\n      setIndicatorStyle = _React$useState2[1];\n\n  var _React$useState3 = _react.default.useState({\n    start: false,\n    end: false\n  }),\n      displayScroll = _React$useState3[0],\n      setDisplayScroll = _React$useState3[1];\n\n  var _React$useState4 = _react.default.useState({\n    overflow: 'hidden',\n    marginBottom: null\n  }),\n      scrollerStyle = _React$useState4[0],\n      setScrollerStyle = _React$useState4[1];\n\n  var valueToIndex = new Map();\n\n  var tabsRef = _react.default.useRef(null);\n\n  var childrenWrapperRef = _react.default.useRef(null);\n\n  var getTabsMeta = function getTabsMeta() {\n    var tabsNode = tabsRef.current;\n    var tabsMeta;\n\n    if (tabsNode) {\n      var rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollLeftNormalized: (0, _normalizeScrollLeft.getNormalizedScrollLeft)(tabsNode, theme.direction),\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n\n    var tabMeta;\n\n    if (tabsNode && value !== false) {\n      var _children = childrenWrapperRef.current.children;\n\n      if (_children.length > 0) {\n        var tab = _children[valueToIndex.get(value)];\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([\"Material-UI: the value provided `\".concat(value, \"` to the Tabs component is invalid.\"), 'None of the Tabs children have this value.', valueToIndex.keys ? \"You can provide one of the following values: \".concat(Array.from(valueToIndex.keys()).join(', '), \".\") : null].join('\\n'));\n          }\n        }\n\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n      }\n    }\n\n    return {\n      tabsMeta: tabsMeta,\n      tabMeta: tabMeta\n    };\n  };\n\n  var updateIndicatorState = (0, _useEventCallback.default)(function () {\n    var _newIndicatorStyle;\n\n    var _getTabsMeta = getTabsMeta(),\n        tabsMeta = _getTabsMeta.tabsMeta,\n        tabMeta = _getTabsMeta.tabMeta;\n\n    var startValue = 0;\n\n    if (tabMeta && tabsMeta) {\n      if (vertical) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      } else {\n        var correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        startValue = tabMeta.left - tabsMeta.left + correction;\n      }\n    }\n\n    var newIndicatorStyle = (_newIndicatorStyle = {}, (0, _defineProperty2.default)(_newIndicatorStyle, start, startValue), (0, _defineProperty2.default)(_newIndicatorStyle, size, tabMeta ? tabMeta[size] : 0), _newIndicatorStyle);\n\n    if (isNaN(indicatorStyle[start]) || isNaN(indicatorStyle[size])) {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      var dStart = Math.abs(indicatorStyle[start] - newIndicatorStyle[start]);\n      var dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n\n  var scroll = function scroll(scrollValue) {\n    (0, _animate.default)(scrollStart, tabsRef.current, scrollValue);\n  };\n\n  var moveTabsScroll = function moveTabsScroll(delta) {\n    var scrollValue = tabsRef.current[scrollStart];\n\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge\n\n      scrollValue *= isRtl && (0, _normalizeScrollLeft.detectScrollType)() === 'reverse' ? -1 : 1;\n    }\n\n    scroll(scrollValue);\n  };\n\n  var handleStartScrollClick = function handleStartScrollClick() {\n    moveTabsScroll(-tabsRef.current[clientSize]);\n  };\n\n  var handleEndScrollClick = function handleEndScrollClick() {\n    moveTabsScroll(tabsRef.current[clientSize]);\n  };\n\n  var handleScrollbarSizeChange = _react.default.useCallback(function (scrollbarHeight) {\n    setScrollerStyle({\n      overflow: null,\n      marginBottom: -scrollbarHeight\n    });\n  }, []);\n\n  var getConditionalElements = function getConditionalElements() {\n    var conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? _react.default.createElement(_ScrollbarSize.default, {\n      className: classes.scrollable,\n      onChange: handleScrollbarSizeChange\n    }) : null;\n    var scrollButtonsActive = displayScroll.start || displayScroll.end;\n    var showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === 'desktop' || scrollButtons === 'on');\n    conditionalElements.scrollButtonStart = showScrollButtons ? _react.default.createElement(ScrollButtonComponent, {\n      orientation: orientation,\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      visible: displayScroll.start,\n      className: (0, _clsx.default)(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\n    }) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? _react.default.createElement(ScrollButtonComponent, {\n      orientation: orientation,\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      visible: displayScroll.end,\n      className: (0, _clsx.default)(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\n    }) : null;\n    return conditionalElements;\n  };\n\n  var scrollSelectedIntoView = (0, _useEventCallback.default)(function () {\n    var _getTabsMeta2 = getTabsMeta(),\n        tabsMeta = _getTabsMeta2.tabsMeta,\n        tabMeta = _getTabsMeta2.tabMeta;\n\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      var nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart);\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      var _nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n\n      scroll(_nextScrollStart);\n    }\n  });\n  var updateScrollButtonState = (0, _useEventCallback.default)(function () {\n    if (scrollable && scrollButtons !== 'off') {\n      var _tabsRef$current = tabsRef.current,\n          scrollTop = _tabsRef$current.scrollTop,\n          scrollHeight = _tabsRef$current.scrollHeight,\n          clientHeight = _tabsRef$current.clientHeight,\n          scrollWidth = _tabsRef$current.scrollWidth,\n          clientWidth = _tabsRef$current.clientWidth;\n      var showStartScroll;\n      var showEndScroll;\n\n      if (vertical) {\n        showStartScroll = scrollTop > 1;\n        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;\n      } else {\n        var scrollLeft = (0, _normalizeScrollLeft.getNormalizedScrollLeft)(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n      }\n\n      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {\n        setDisplayScroll({\n          start: showStartScroll,\n          end: showEndScroll\n        });\n      }\n    }\n  });\n\n  _react.default.useEffect(function () {\n    var handleResize = (0, _debounce.default)(function () {\n      updateIndicatorState();\n      updateScrollButtonState();\n    });\n    var win = (0, _ownerWindow.default)(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n\n  var handleTabsScroll = _react.default.useCallback((0, _debounce.default)(function () {\n    updateScrollButtonState();\n  }));\n\n  _react.default.useEffect(function () {\n    return function () {\n      handleTabsScroll.clear();\n    };\n  }, [handleTabsScroll]);\n\n  _react.default.useEffect(function () {\n    setMounted(true);\n  }, []);\n\n  _react.default.useEffect(function () {\n    updateIndicatorState();\n    updateScrollButtonState();\n  });\n\n  _react.default.useEffect(function () {\n    scrollSelectedIntoView();\n  }, [scrollSelectedIntoView, indicatorStyle]);\n\n  _react.default.useImperativeHandle(action, function () {\n    return {\n      updateIndicator: updateIndicatorState,\n      updateScrollButtons: updateScrollButtonState\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n\n  var indicator = _react.default.createElement(_TabIndicator.default, (0, _extends2.default)({\n    className: classes.indicator,\n    orientation: orientation,\n    color: indicatorColor\n  }, TabIndicatorProps, {\n    style: (0, _extends2.default)({}, indicatorStyle, {}, TabIndicatorProps.style)\n  }));\n\n  var childIndex = 0;\n\n  var children = _react.default.Children.map(childrenProp, function (child) {\n    if (!_react.default.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (child.type === _react.default.Fragment) {\n        console.error([\"Material-UI: the Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    var selected = childValue === value;\n    childIndex += 1;\n    return _react.default.cloneElement(child, {\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected: selected,\n      onChange: onChange,\n      textColor: textColor,\n      value: childValue\n    });\n  });\n\n  var conditionalElements = getConditionalElements();\n  return _react.default.createElement(Component, (0, _extends2.default)({\n    className: (0, _clsx.default)(classes.root, className, vertical && classes.vertical),\n    ref: ref\n  }, other), conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, _react.default.createElement(\"div\", {\n    className: (0, _clsx.default)(classes.scroller, scrollable ? classes.scrollable : classes.fixed),\n    style: scrollerStyle,\n    ref: tabsRef,\n    onScroll: handleTabsScroll\n  }, _react.default.createElement(\"div\", {\n    className: (0, _clsx.default)(classes.flexContainer, vertical && classes.flexContainerVertical, centered && !scrollable && classes.centered),\n    ref: childrenWrapperRef,\n    role: \"tablist\"\n  }, children), mounted && indicator), conditionalElements.scrollButtonEnd);\n});\n\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes = {\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: _utils.refType,\n\n  /**\n   * If `true`, the tabs will be centered.\n   * This property is intended for large views.\n   */\n  centered: _propTypes.default.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: _propTypes.default.elementType,\n\n  /**\n   * Determines the color of the indicator.\n   */\n  indicatorColor: _propTypes.default.oneOf(['secondary', 'primary']),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   */\n  orientation: _propTypes.default.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The component used to render the scroll buttons.\n   */\n  ScrollButtonComponent: _propTypes.default.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `desktop` will only present them on medium and larger viewports.\n   * - `on` will always present them.\n   * - `off` will never present them.\n   */\n  scrollButtons: _propTypes.default.oneOf(['auto', 'desktop', 'on', 'off']),\n\n  /**\n   * Props applied to the tab indicator element.\n   */\n  TabIndicatorProps: _propTypes.default.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   */\n  textColor: _propTypes.default.oneOf(['secondary', 'primary', 'inherit']),\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this property to `false`.\n   */\n  value: _propTypes.default.any,\n\n  /**\n   *  Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   */\n  variant: _propTypes.default.oneOf(['standard', 'scrollable', 'fullWidth'])\n} : void 0;\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiTabs'\n})(Tabs);\n\nexports.default = _default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$material_ui$core$internal$animate","~$module$node_modules$clsx$dist$clsx","~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$module$node_modules$$material_ui$core$styles$useTheme","~$module$node_modules$react$index","~$module$node_modules$$material_ui$core$Tabs$TabScrollButton","~$module$node_modules$prop_types$index","~$module$node_modules$$material_ui$core$utils$useEventCallback","~$shadow.js","~$module$node_modules$$babel$runtime$helpers$extends","~$module$node_modules$$material_ui$core$Tabs$ScrollbarSize","~$module$node_modules$$material_ui$core$utils$debounce","~$module$node_modules$$material_ui$core$styles$withStyles","~$module$node_modules$$babel$runtime$helpers$objectWithoutProperties","~$module$node_modules$$material_ui$core$utils$ownerWindow","~$module$node_modules$$babel$runtime$helpers$defineProperty","~$module$node_modules$normalize_scroll_left$cjs$main","~$module$node_modules$$material_ui$core$Tabs$TabIndicator","~$module$node_modules$$material_ui$utils$index"]],"~:properties",["^5",["scrollWidth","overflowX","role","tabMeta","selected","marginBottom","width","right","top","whiteSpace","indicator","onChange","ScrollButtonComponent","minHeight","fullWidth","TabIndicatorProps","scrollLeft","className","flexDirection","scrollButtonsDesktop","scroller","children","component","__esModule","vertical","justifyContent","root","fixed","indicatorColor","propTypes","position","name","scrollLeftNormalized","style","value","visible","direction","flexContainerVertical","start","tabsMeta","textColor","scrollButtons","action","classes","styles","centered","onClick","clientWidth","overflow","ref","scrollbarSizeListener","display","bottom","updateScrollButtons","onScroll","scrollButtonEnd","scrollButtonStart","flexContainer","flex","updateIndicator","scrollTop","scrollable","color","default","WebkitOverflowScrolling","scrollbarWidth","end","left","variant","orientation"]],"~:compiled-at",1572526175680,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$material_ui$core$Tabs$Tabs.js\",\n\"lineCount\":27,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@material-ui/core/Tabs/Tabs.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$material_ui$core$Tabs$Tabs\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = exports.styles = void 0;\\n\\nvar _extends2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/extends\\\"));\\n\\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/objectWithoutProperties\\\"));\\n\\nvar _defineProperty2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/defineProperty\\\"));\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\n\\nvar _propTypes = _interopRequireDefault(require(\\\"prop-types\\\"));\\n\\nvar _clsx = _interopRequireDefault(require(\\\"clsx\\\"));\\n\\nvar _utils = require(\\\"@material-ui/utils\\\");\\n\\nvar _debounce = _interopRequireDefault(require(\\\"../utils/debounce\\\"));\\n\\nvar _ownerWindow = _interopRequireDefault(require(\\\"../utils/ownerWindow\\\"));\\n\\nvar _normalizeScrollLeft = require(\\\"normalize-scroll-left\\\");\\n\\nvar _animate = _interopRequireDefault(require(\\\"../internal/animate\\\"));\\n\\nvar _ScrollbarSize = _interopRequireDefault(require(\\\"./ScrollbarSize\\\"));\\n\\nvar _withStyles = _interopRequireDefault(require(\\\"../styles/withStyles\\\"));\\n\\nvar _TabIndicator = _interopRequireDefault(require(\\\"./TabIndicator\\\"));\\n\\nvar _TabScrollButton = _interopRequireDefault(require(\\\"./TabScrollButton\\\"));\\n\\nvar _useEventCallback = _interopRequireDefault(require(\\\"../utils/useEventCallback\\\"));\\n\\nvar _useTheme = _interopRequireDefault(require(\\\"../styles/useTheme\\\"));\\n\\nvar styles = function styles(theme) {\\n  return {\\n    /* Styles applied to the root element. */\\n    root: {\\n      overflow: 'hidden',\\n      minHeight: 48,\\n      WebkitOverflowScrolling: 'touch',\\n      // Add iOS momentum scrolling.\\n      display: 'flex'\\n    },\\n\\n    /* Styles applied to the root element if `orientation=\\\"vertical\\\"`. */\\n    vertical: {\\n      flexDirection: 'column'\\n    },\\n\\n    /* Styles applied to the flex container element. */\\n    flexContainer: {\\n      display: 'flex'\\n    },\\n\\n    /* Styles applied to the flex container element if `orientation=\\\"vertical\\\"`. */\\n    flexContainerVertical: {\\n      flexDirection: 'column'\\n    },\\n\\n    /* Styles applied to the flex container element if `centered={true}` & `!variant=\\\"scrollable\\\"`. */\\n    centered: {\\n      justifyContent: 'center'\\n    },\\n\\n    /* Styles applied to the tablist element. */\\n    scroller: {\\n      position: 'relative',\\n      display: 'inline-block',\\n      flex: '1 1 auto',\\n      whiteSpace: 'nowrap'\\n    },\\n\\n    /* Styles applied to the tablist element if `!variant=\\\"scrollable\\\"`\\u0008\\u0008\\u0008. */\\n    fixed: {\\n      overflowX: 'hidden',\\n      width: '100%'\\n    },\\n\\n    /* Styles applied to the tablist element if `variant=\\\"scrollable\\\"`. */\\n    scrollable: {\\n      overflowX: 'scroll',\\n      // Hide dimensionless scrollbar on MacOS\\n      scrollbarWidth: 'none',\\n      // Firefox\\n      '&::-webkit-scrollbar': {\\n        display: 'none' // Safari + Chrome\\n\\n      }\\n    },\\n\\n    /* Styles applied to the `ScrollButtonComponent` component. */\\n    scrollButtons: {},\\n\\n    /* Styles applied to the `ScrollButtonComponent` component if `scrollButtons=\\\"auto\\\"` or scrollButtons=\\\"desktop\\\"`. */\\n    scrollButtonsDesktop: (0, _defineProperty2.default)({}, theme.breakpoints.down('xs'), {\\n      display: 'none'\\n    }),\\n\\n    /* Styles applied to the `TabIndicator` component. */\\n    indicator: {}\\n  };\\n};\\n\\nexports.styles = styles;\\n\\nvar Tabs = _react.default.forwardRef(function Tabs(props, ref) {\\n  var action = props.action,\\n      _props$centered = props.centered,\\n      centered = _props$centered === void 0 ? false : _props$centered,\\n      childrenProp = props.children,\\n      classes = props.classes,\\n      className = props.className,\\n      _props$component = props.component,\\n      Component = _props$component === void 0 ? 'div' : _props$component,\\n      _props$indicatorColor = props.indicatorColor,\\n      indicatorColor = _props$indicatorColor === void 0 ? 'secondary' : _props$indicatorColor,\\n      onChange = props.onChange,\\n      _props$orientation = props.orientation,\\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\\n      _props$ScrollButtonCo = props.ScrollButtonComponent,\\n      ScrollButtonComponent = _props$ScrollButtonCo === void 0 ? _TabScrollButton.default : _props$ScrollButtonCo,\\n      _props$scrollButtons = props.scrollButtons,\\n      scrollButtons = _props$scrollButtons === void 0 ? 'auto' : _props$scrollButtons,\\n      _props$TabIndicatorPr = props.TabIndicatorProps,\\n      TabIndicatorProps = _props$TabIndicatorPr === void 0 ? {} : _props$TabIndicatorPr,\\n      _props$textColor = props.textColor,\\n      textColor = _props$textColor === void 0 ? 'inherit' : _props$textColor,\\n      value = props.value,\\n      _props$variant = props.variant,\\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\\n      other = (0, _objectWithoutProperties2.default)(props, [\\\"action\\\", \\\"centered\\\", \\\"children\\\", \\\"classes\\\", \\\"className\\\", \\\"component\\\", \\\"indicatorColor\\\", \\\"onChange\\\", \\\"orientation\\\", \\\"ScrollButtonComponent\\\", \\\"scrollButtons\\\", \\\"TabIndicatorProps\\\", \\\"textColor\\\", \\\"value\\\", \\\"variant\\\"]);\\n  var theme = (0, _useTheme.default)();\\n  var scrollable = variant === 'scrollable';\\n  var isRtl = theme.direction === 'rtl';\\n  var vertical = orientation === 'vertical';\\n  var scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\\n  var start = vertical ? 'top' : 'left';\\n  var end = vertical ? 'bottom' : 'right';\\n  var clientSize = vertical ? 'clientHeight' : 'clientWidth';\\n  var size = vertical ? 'height' : 'width';\\n\\n  if (process.env.NODE_ENV !== 'production') {\\n    if (centered && scrollable) {\\n      console.error('Material-UI: you can not use the `centered={true}` and `variant=\\\"scrollable\\\"` properties ' + 'at the same time on a `Tabs` component.');\\n    }\\n  }\\n\\n  var _React$useState = _react.default.useState(false),\\n      mounted = _React$useState[0],\\n      setMounted = _React$useState[1];\\n\\n  var _React$useState2 = _react.default.useState({}),\\n      indicatorStyle = _React$useState2[0],\\n      setIndicatorStyle = _React$useState2[1];\\n\\n  var _React$useState3 = _react.default.useState({\\n    start: false,\\n    end: false\\n  }),\\n      displayScroll = _React$useState3[0],\\n      setDisplayScroll = _React$useState3[1];\\n\\n  var _React$useState4 = _react.default.useState({\\n    overflow: 'hidden',\\n    marginBottom: null\\n  }),\\n      scrollerStyle = _React$useState4[0],\\n      setScrollerStyle = _React$useState4[1];\\n\\n  var valueToIndex = new Map();\\n\\n  var tabsRef = _react.default.useRef(null);\\n\\n  var childrenWrapperRef = _react.default.useRef(null);\\n\\n  var getTabsMeta = function getTabsMeta() {\\n    var tabsNode = tabsRef.current;\\n    var tabsMeta;\\n\\n    if (tabsNode) {\\n      var rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\\n\\n      tabsMeta = {\\n        clientWidth: tabsNode.clientWidth,\\n        scrollLeft: tabsNode.scrollLeft,\\n        scrollTop: tabsNode.scrollTop,\\n        scrollLeftNormalized: (0, _normalizeScrollLeft.getNormalizedScrollLeft)(tabsNode, theme.direction),\\n        scrollWidth: tabsNode.scrollWidth,\\n        top: rect.top,\\n        bottom: rect.bottom,\\n        left: rect.left,\\n        right: rect.right\\n      };\\n    }\\n\\n    var tabMeta;\\n\\n    if (tabsNode && value !== false) {\\n      var _children = childrenWrapperRef.current.children;\\n\\n      if (_children.length > 0) {\\n        var tab = _children[valueToIndex.get(value)];\\n\\n        if (process.env.NODE_ENV !== 'production') {\\n          if (!tab) {\\n            console.error([\\\"Material-UI: the value provided `\\\".concat(value, \\\"` to the Tabs component is invalid.\\\"), 'None of the Tabs children have this value.', valueToIndex.keys ? \\\"You can provide one of the following values: \\\".concat(Array.from(valueToIndex.keys()).join(', '), \\\".\\\") : null].join('\\\\n'));\\n          }\\n        }\\n\\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\\n      }\\n    }\\n\\n    return {\\n      tabsMeta: tabsMeta,\\n      tabMeta: tabMeta\\n    };\\n  };\\n\\n  var updateIndicatorState = (0, _useEventCallback.default)(function () {\\n    var _newIndicatorStyle;\\n\\n    var _getTabsMeta = getTabsMeta(),\\n        tabsMeta = _getTabsMeta.tabsMeta,\\n        tabMeta = _getTabsMeta.tabMeta;\\n\\n    var startValue = 0;\\n\\n    if (tabMeta && tabsMeta) {\\n      if (vertical) {\\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\\n      } else {\\n        var correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\\n        startValue = tabMeta.left - tabsMeta.left + correction;\\n      }\\n    }\\n\\n    var newIndicatorStyle = (_newIndicatorStyle = {}, (0, _defineProperty2.default)(_newIndicatorStyle, start, startValue), (0, _defineProperty2.default)(_newIndicatorStyle, size, tabMeta ? tabMeta[size] : 0), _newIndicatorStyle);\\n\\n    if (isNaN(indicatorStyle[start]) || isNaN(indicatorStyle[size])) {\\n      setIndicatorStyle(newIndicatorStyle);\\n    } else {\\n      var dStart = Math.abs(indicatorStyle[start] - newIndicatorStyle[start]);\\n      var dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\\n\\n      if (dStart >= 1 || dSize >= 1) {\\n        setIndicatorStyle(newIndicatorStyle);\\n      }\\n    }\\n  });\\n\\n  var scroll = function scroll(scrollValue) {\\n    (0, _animate.default)(scrollStart, tabsRef.current, scrollValue);\\n  };\\n\\n  var moveTabsScroll = function moveTabsScroll(delta) {\\n    var scrollValue = tabsRef.current[scrollStart];\\n\\n    if (vertical) {\\n      scrollValue += delta;\\n    } else {\\n      scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge\\n\\n      scrollValue *= isRtl && (0, _normalizeScrollLeft.detectScrollType)() === 'reverse' ? -1 : 1;\\n    }\\n\\n    scroll(scrollValue);\\n  };\\n\\n  var handleStartScrollClick = function handleStartScrollClick() {\\n    moveTabsScroll(-tabsRef.current[clientSize]);\\n  };\\n\\n  var handleEndScrollClick = function handleEndScrollClick() {\\n    moveTabsScroll(tabsRef.current[clientSize]);\\n  };\\n\\n  var handleScrollbarSizeChange = _react.default.useCallback(function (scrollbarHeight) {\\n    setScrollerStyle({\\n      overflow: null,\\n      marginBottom: -scrollbarHeight\\n    });\\n  }, []);\\n\\n  var getConditionalElements = function getConditionalElements() {\\n    var conditionalElements = {};\\n    conditionalElements.scrollbarSizeListener = scrollable ? _react.default.createElement(_ScrollbarSize.default, {\\n      className: classes.scrollable,\\n      onChange: handleScrollbarSizeChange\\n    }) : null;\\n    var scrollButtonsActive = displayScroll.start || displayScroll.end;\\n    var showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === 'desktop' || scrollButtons === 'on');\\n    conditionalElements.scrollButtonStart = showScrollButtons ? _react.default.createElement(ScrollButtonComponent, {\\n      orientation: orientation,\\n      direction: isRtl ? 'right' : 'left',\\n      onClick: handleStartScrollClick,\\n      visible: displayScroll.start,\\n      className: (0, _clsx.default)(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\\n    }) : null;\\n    conditionalElements.scrollButtonEnd = showScrollButtons ? _react.default.createElement(ScrollButtonComponent, {\\n      orientation: orientation,\\n      direction: isRtl ? 'left' : 'right',\\n      onClick: handleEndScrollClick,\\n      visible: displayScroll.end,\\n      className: (0, _clsx.default)(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\\n    }) : null;\\n    return conditionalElements;\\n  };\\n\\n  var scrollSelectedIntoView = (0, _useEventCallback.default)(function () {\\n    var _getTabsMeta2 = getTabsMeta(),\\n        tabsMeta = _getTabsMeta2.tabsMeta,\\n        tabMeta = _getTabsMeta2.tabMeta;\\n\\n    if (!tabMeta || !tabsMeta) {\\n      return;\\n    }\\n\\n    if (tabMeta[start] < tabsMeta[start]) {\\n      // left side of button is out of view\\n      var nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\\n      scroll(nextScrollStart);\\n    } else if (tabMeta[end] > tabsMeta[end]) {\\n      // right side of button is out of view\\n      var _nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\\n\\n      scroll(_nextScrollStart);\\n    }\\n  });\\n  var updateScrollButtonState = (0, _useEventCallback.default)(function () {\\n    if (scrollable && scrollButtons !== 'off') {\\n      var _tabsRef$current = tabsRef.current,\\n          scrollTop = _tabsRef$current.scrollTop,\\n          scrollHeight = _tabsRef$current.scrollHeight,\\n          clientHeight = _tabsRef$current.clientHeight,\\n          scrollWidth = _tabsRef$current.scrollWidth,\\n          clientWidth = _tabsRef$current.clientWidth;\\n      var showStartScroll;\\n      var showEndScroll;\\n\\n      if (vertical) {\\n        showStartScroll = scrollTop > 1;\\n        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;\\n      } else {\\n        var scrollLeft = (0, _normalizeScrollLeft.getNormalizedScrollLeft)(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.\\n\\n        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\\n        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\\n      }\\n\\n      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {\\n        setDisplayScroll({\\n          start: showStartScroll,\\n          end: showEndScroll\\n        });\\n      }\\n    }\\n  });\\n\\n  _react.default.useEffect(function () {\\n    var handleResize = (0, _debounce.default)(function () {\\n      updateIndicatorState();\\n      updateScrollButtonState();\\n    });\\n    var win = (0, _ownerWindow.default)(tabsRef.current);\\n    win.addEventListener('resize', handleResize);\\n    return function () {\\n      handleResize.clear();\\n      win.removeEventListener('resize', handleResize);\\n    };\\n  }, [updateIndicatorState, updateScrollButtonState]);\\n\\n  var handleTabsScroll = _react.default.useCallback((0, _debounce.default)(function () {\\n    updateScrollButtonState();\\n  }));\\n\\n  _react.default.useEffect(function () {\\n    return function () {\\n      handleTabsScroll.clear();\\n    };\\n  }, [handleTabsScroll]);\\n\\n  _react.default.useEffect(function () {\\n    setMounted(true);\\n  }, []);\\n\\n  _react.default.useEffect(function () {\\n    updateIndicatorState();\\n    updateScrollButtonState();\\n  });\\n\\n  _react.default.useEffect(function () {\\n    scrollSelectedIntoView();\\n  }, [scrollSelectedIntoView, indicatorStyle]);\\n\\n  _react.default.useImperativeHandle(action, function () {\\n    return {\\n      updateIndicator: updateIndicatorState,\\n      updateScrollButtons: updateScrollButtonState\\n    };\\n  }, [updateIndicatorState, updateScrollButtonState]);\\n\\n  var indicator = _react.default.createElement(_TabIndicator.default, (0, _extends2.default)({\\n    className: classes.indicator,\\n    orientation: orientation,\\n    color: indicatorColor\\n  }, TabIndicatorProps, {\\n    style: (0, _extends2.default)({}, indicatorStyle, {}, TabIndicatorProps.style)\\n  }));\\n\\n  var childIndex = 0;\\n\\n  var children = _react.default.Children.map(childrenProp, function (child) {\\n    if (!_react.default.isValidElement(child)) {\\n      return null;\\n    }\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      if (child.type === _react.default.Fragment) {\\n        console.error([\\\"Material-UI: the Tabs component doesn't accept a Fragment as a child.\\\", 'Consider providing an array instead.'].join('\\\\n'));\\n      }\\n    }\\n\\n    var childValue = child.props.value === undefined ? childIndex : child.props.value;\\n    valueToIndex.set(childValue, childIndex);\\n    var selected = childValue === value;\\n    childIndex += 1;\\n    return _react.default.cloneElement(child, {\\n      fullWidth: variant === 'fullWidth',\\n      indicator: selected && !mounted && indicator,\\n      selected: selected,\\n      onChange: onChange,\\n      textColor: textColor,\\n      value: childValue\\n    });\\n  });\\n\\n  var conditionalElements = getConditionalElements();\\n  return _react.default.createElement(Component, (0, _extends2.default)({\\n    className: (0, _clsx.default)(classes.root, className, vertical && classes.vertical),\\n    ref: ref\\n  }, other), conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, _react.default.createElement(\\\"div\\\", {\\n    className: (0, _clsx.default)(classes.scroller, scrollable ? classes.scrollable : classes.fixed),\\n    style: scrollerStyle,\\n    ref: tabsRef,\\n    onScroll: handleTabsScroll\\n  }, _react.default.createElement(\\\"div\\\", {\\n    className: (0, _clsx.default)(classes.flexContainer, vertical && classes.flexContainerVertical, centered && !scrollable && classes.centered),\\n    ref: childrenWrapperRef,\\n    role: \\\"tablist\\\"\\n  }, children), mounted && indicator), conditionalElements.scrollButtonEnd);\\n});\\n\\nprocess.env.NODE_ENV !== \\\"production\\\" ? Tabs.propTypes = {\\n  /**\\n   * Callback fired when the component mounts.\\n   * This is useful when you want to trigger an action programmatically.\\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\\n   *\\n   * @param {object} actions This object contains all possible actions\\n   * that can be triggered programmatically.\\n   */\\n  action: _utils.refType,\\n\\n  /**\\n   * If `true`, the tabs will be centered.\\n   * This property is intended for large views.\\n   */\\n  centered: _propTypes.default.bool,\\n\\n  /**\\n   * The content of the component.\\n   */\\n  children: _propTypes.default.node,\\n\\n  /**\\n   * Override or extend the styles applied to the component.\\n   * See [CSS API](#css) below for more details.\\n   */\\n  classes: _propTypes.default.object.isRequired,\\n\\n  /**\\n   * @ignore\\n   */\\n  className: _propTypes.default.string,\\n\\n  /**\\n   * The component used for the root node.\\n   * Either a string to use a DOM element or a component.\\n   */\\n  component: _propTypes.default.elementType,\\n\\n  /**\\n   * Determines the color of the indicator.\\n   */\\n  indicatorColor: _propTypes.default.oneOf(['secondary', 'primary']),\\n\\n  /**\\n   * Callback fired when the value changes.\\n   *\\n   * @param {object} event The event source of the callback\\n   * @param {any} value We default to the index of the child (number)\\n   */\\n  onChange: _propTypes.default.func,\\n\\n  /**\\n   * The tabs orientation (layout flow direction).\\n   */\\n  orientation: _propTypes.default.oneOf(['horizontal', 'vertical']),\\n\\n  /**\\n   * The component used to render the scroll buttons.\\n   */\\n  ScrollButtonComponent: _propTypes.default.elementType,\\n\\n  /**\\n   * Determine behavior of scroll buttons when tabs are set to scroll:\\n   *\\n   * - `auto` will only present them when not all the items are visible.\\n   * - `desktop` will only present them on medium and larger viewports.\\n   * - `on` will always present them.\\n   * - `off` will never present them.\\n   */\\n  scrollButtons: _propTypes.default.oneOf(['auto', 'desktop', 'on', 'off']),\\n\\n  /**\\n   * Props applied to the tab indicator element.\\n   */\\n  TabIndicatorProps: _propTypes.default.object,\\n\\n  /**\\n   * Determines the color of the `Tab`.\\n   */\\n  textColor: _propTypes.default.oneOf(['secondary', 'primary', 'inherit']),\\n\\n  /**\\n   * The value of the currently selected `Tab`.\\n   * If you don't want any selected `Tab`, you can set this property to `false`.\\n   */\\n  value: _propTypes.default.any,\\n\\n  /**\\n   *  Determines additional display behavior of the tabs:\\n   *\\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\\n   *  scrolling (or swiping) of the tab bar.\\n   *  -`fullWidth` will make the tabs grow to use all the available space,\\n   *  which should be used for small views, like on mobile.\\n   *  - `standard` will render the default state.\\n   */\\n  variant: _propTypes.default.oneOf(['standard', 'scrollable', 'fullWidth'])\\n} : void 0;\\n\\nvar _default = (0, _withStyles.default)(styles, {\\n  name: 'MuiTabs'\\n})(Tabs);\\n\\nexports.default = _default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"value\",\"default\",\"styles\",\"_extends2\",\"_objectWithoutProperties2\",\"_defineProperty2\",\"_react\",\"_propTypes\",\"_clsx\",\"_utils\",\"_debounce\",\"_ownerWindow\",\"_normalizeScrollLeft\",\"_animate\",\"_ScrollbarSize\",\"_withStyles\",\"_TabIndicator\",\"_TabScrollButton\",\"_useEventCallback\",\"_useTheme\",\"theme\",\"root\",\"overflow\",\"minHeight\",\"WebkitOverflowScrolling\",\"display\",\"vertical\",\"flexDirection\",\"flexContainer\",\"flexContainerVertical\",\"centered\",\"justifyContent\",\"scroller\",\"position\",\"flex\",\"whiteSpace\",\"fixed\",\"overflowX\",\"width\",\"scrollable\",\"scrollbarWidth\",\"scrollButtons\",\"scrollButtonsDesktop\",\"breakpoints\",\"down\",\"indicator\",\"Tabs\",\"forwardRef\",\"props\",\"ref\",\"action\",\"_props$centered\",\"childrenProp\",\"children\",\"classes\",\"className\",\"_props$component\",\"component\",\"Component\",\"_props$indicatorColor\",\"indicatorColor\",\"onChange\",\"_props$orientation\",\"orientation\",\"_props$ScrollButtonCo\",\"ScrollButtonComponent\",\"_props$scrollButtons\",\"_props$TabIndicatorPr\",\"TabIndicatorProps\",\"_props$textColor\",\"textColor\",\"_props$variant\",\"variant\",\"other\",\"isRtl\",\"direction\",\"scrollStart\",\"start\",\"end\",\"clientSize\",\"size\",\"console\",\"error\",\"_React$useState\",\"useState\",\"mounted\",\"setMounted\",\"_React$useState2\",\"indicatorStyle\",\"setIndicatorStyle\",\"_React$useState3\",\"displayScroll\",\"setDisplayScroll\",\"_React$useState4\",\"marginBottom\",\"scrollerStyle\",\"setScrollerStyle\",\"valueToIndex\",\"Map\",\"tabsRef\",\"useRef\",\"childrenWrapperRef\",\"getTabsMeta\",\"tabsNode\",\"current\",\"rect\",\"getBoundingClientRect\",\"tabsMeta\",\"clientWidth\",\"scrollLeft\",\"scrollTop\",\"scrollLeftNormalized\",\"getNormalizedScrollLeft\",\"scrollWidth\",\"top\",\"bottom\",\"left\",\"right\",\"tabMeta\",\"_children\",\"length\",\"tab\",\"get\",\"concat\",\"keys\",\"Array\",\"from\",\"join\",\"updateIndicatorState\",\"_newIndicatorStyle\",\"_getTabsMeta\",\"startValue\",\"correction\",\"newIndicatorStyle\",\"isNaN\",\"dSize\",\"Math\",\"abs\",\"dStart\",\"scroll\",\"scrollValue\",\"moveTabsScroll\",\"delta\",\"detectScrollType\",\"handleStartScrollClick\",\"handleEndScrollClick\",\"handleScrollbarSizeChange\",\"useCallback\",\"scrollbarHeight\",\"scrollSelectedIntoView\",\"_getTabsMeta2\",\"updateScrollButtonState\",\"_tabsRef$current\",\"scrollHeight\",\"clientHeight\",\"showStartScroll\",\"showEndScroll\",\"useEffect\",\"handleResize\",\"win\",\"addEventListener\",\"clear\",\"removeEventListener\",\"handleTabsScroll\",\"useImperativeHandle\",\"updateIndicator\",\"updateScrollButtons\",\"createElement\",\"color\",\"style\",\"childIndex\",\"Children\",\"map\",\"child\",\"isValidElement\",\"type\",\"Fragment\",\"childValue\",\"undefined\",\"set\",\"selected\",\"cloneElement\",\"fullWidth\",\"conditionalElements\",\"getConditionalElements\",\"scrollbarSizeListener\",\"scrollButtonsActive\",\"showScrollButtons\",\"scrollButtonStart\",\"onClick\",\"visible\",\"scrollButtonEnd\",\"onScroll\",\"role\",\"propTypes\",\"refType\",\"bool\",\"node\",\"object\",\"isRequired\",\"string\",\"elementType\",\"oneOf\",\"func\",\"any\",\"_default\",\"name\"]\n}\n"]